<?php

namespace BlogBundle\DataFixtures\ORM;

use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use Doctrine\ORM\Mapping\ClassMetadata;
use BlogBundle\Entity\Post;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Generated by Webonaute\DoctrineFixtureGenerator.
 *
 */
class LoadBlogBundleEntityPost extends Fixture implements OrderedFixtureInterface, ContainerAwareInterface
{


    /**
     * @var ContainerInterface
     */
    private $container;

    public function setContainer(ContainerInterface $container = null) {
        $this->container = $container;
    }

    /**
     * Set loading order.
     *
     * @return int
     */
    public function getOrder()
    {
        return 2;
    }




    /**
     * {@inheritDoc}
     */
    public function load(ObjectManager $manager)
    {
        $manager->getClassMetadata(Post::class)->setIdGeneratorType(ClassMetadata::GENERATOR_TYPE_NONE);

        $em = $this->container->get('doctrine')->getEntityManager();
        $em->getConnection()->exec('ALTER TABLE post AUTO_INCREMENT = 1');

        $item1 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost1', $item1);
        $item1->setTitle("Un trafic d’identifiants Freewifi démantelé dans une université lilloise");
        $item1->setContent("À l’origine de l’affaire, la générosité ingénue d’un étudiant de 2ème année qui accepte en octobre de confier ses identifiants familiaux à un camarade pour lui permettre de suivre un important match de Ligue 1. Malgré la promesse de ne pas partager partout ces identifiants, ceux-ci sont rapidement disséminés de façon incontrôlable. Mi-novembre, ce ne sont pas moins de 117 étudiants toutes années confondues qui utilisent sans vergogne le code d’accès – parfois pour des usages peu reluisants : visionnage de Grey’s Anatomy en streaming, jeux de rôle en ligne, vente de mobylettes sur Le Bon Coin…

Poursuivi par Free, l’étudiant s’est réfugié à l’ambassade du Paraguay

À la décharge des étudiants, le wi-fi rudimentaire disponible à l’université ne permet guère que de consulter ses e-mails, moyennant 12 minutes de chargement et uniquement au 1er étage du bâtiment. Dépassé par les événements, « l’étudiant-zéro » panique néanmoins – et à juste titre , Free chiffre l’ampleur de la fraude et le manque à gagner est chiffré à 380 000 euros.

Réfugié à l’ambassade du Paraguay depuis décembre, il invoque l’abus de confiance et devrait bientôt donner une conférence TED sur les dangers du numérique.");
        $item1->setDate(new \DateTime("2018-01-04 16:34:50"));
        $item1->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item1);

        $item2 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost2', $item2);
        $item2->setTitle("Arrivé à la fin de son visa, l’acteur qui jouait E.T va être rapatrié vers sa planète d’origine");
        $item2->setContent("C’est fini pour Hollywood en ce qui concerne Zakari Sánchez. Dans ce film culte de Steven Spielberg sorti en 1982, cet acteur au talent exceptionnel jouait une créature extraterrestre recueillie par deux enfants après s’être perdue suite à l’arrivée de son vaisseau sur Terre. S’il est surtout connu pour ce rôle-ci et s’il s’était éloigné des projecteurs en développant une addiction à la cocaïne, il garde une place importante dans le coeur de tous ceux qui ont vu son film étant enfants.

Il se trouve que les extraterrestres ont beaucoup plus de mal à obtenir des green cards que les terriens. En effet, Zakari Sánchez n’a cessé de renouveler son permis de résidence, mais, sans emploi, on lui a récemment refusé une nouvelle prolongation. M. Sánchez garde néanmoins l’espoir de pouvoir rester aux Etats-Unis grâce à ses fans. En effet, ceux-ci ont lancé une campagne afin qu’il ne soit pas obligé de rentrer sur sa planète, sur laquelle sévit d’ailleurs une guerre atroce depuis des années.

Si la pétition obtient suffisamment de signatures, notre cher Zakari aura peut-être une chance de rester aux Etats-Unis, et il continuera à profiter de sa fortune dans sa maison de bord de plage à Malibu. Sinon, il essayera peut-être de demander l’asile politique à un pays européen. Heureusement, Zakari Sánchez parle parfaitement l’allemand !");
        $item2->setDate(new \DateTime("2018-01-03 00:00:00"));
        $item2->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item2);

        $item3 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost3', $item3);
        $item3->setTitle("Texas : le 357 Magnum offert dans chaque Happy Meal relance le débat sur les armes à feu");
        $item3->setContent("16 heures, Mac Donald d’Austin. Justin, 10 ans, est en train de monter son 357 Magnum grâce à la petite notice fournie dans le coffret. Il pointe maintenant son arme en direction d’une voiture et tire sur une fenêtre. « Ça suffit Steven, papa est au téléphone, j’entends rien. » invective Marc. Le père se veut très rassurant « Il n’y a rien de dangereux, c’était une voiture de Mexicains. On lui a appris à faire la différence » nous confie-t-il.

Pourtant, cette nouvelle promotion ne fait pas l’unanimité parmi les habitants de la ville. Notamment pour Maggie, 92 ans « Les enfants ne devraient pas recevoir des armes dans un simple Happy Meal. C’est dangereux, ils ne savent même pas viser, ils pourraient se blesser. D’abord il faut les emmener dans un champ tirer sur des bouteilles de verre. S’ils arrivent à en dégommer 3, là, d’accord » nous confie la vieille dame.

D’autres plaintes sont venues compléter celle de Maggie. Notamment cette femme de 54 ans, qui manifeste aujourd’hui et qui a perdu son mari et ses deux enfants après qu’un enfant de 7 ans s’est servi de son arme. « Il faut absolument mettre fin à ce problème. Si on offre des armes à feu aux enfants gratuitement, les prix vont dégringoler et des fabricants vont devoir fermer boutique. Ce sont des milliers d’emplois américains qui sont en jeu » nous confie la veuve passablement remontée.");
        $item3->setDate(new \DateTime("2018-01-02 00:00:00"));
        $item3->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item3);

        $item4 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost4', $item4);
        $item4->setTitle("Se tenir le menton entre le pouce et l’index n’augmenterait les capacités cognitives que de 12,5%");
        $item4->setContent("Une précédente étude déclarative faisait pourtant ressortir des résultats nettement supérieurs. Pour 85% des personnes interrogées, se tenir le menton entre le pouce et l’index « doublerait voire triplerait leurs capacités intellectuelles ». Cette croyance ancrée de longue date dans l’imaginaire populaire serait à elle seule responsable de la prise de « très mauvaises décisions » comme la conception de Windows Millemium ou, plus fréquemment, le désir de « goûter ses crottes de nez pour vérifier si c’est vraiment salé. »

Sachant travailler sur un sujet sensible, les responsables de l’étude se sont efforcés de suivre un protocole extrêmement complexe. Ainsi, pour isoler et neutraliser l’effet placebo, les scientifiques ont greffé aux participants de faux doigts en plastique afin d’identifier l’impact cognitif réel de vrais doigts apposés sur le menton. Une opération très coûteuse mais nécessaire car, « l’effet placebo joue ici à plein. Nous avons consacré beaucoup de temps et d’énergie pour trouver cette solution et je pense pouvoir affirmer sans me tromper que c’est une réussite », confie en fronçant les sourcils et en hochant la tête Gilles Pratzky, directeur de recherche au CNRS.

Se gratter la tête avec l’index augmente l’activité neuronale de 23%

« Il faut savoir que 12,5% c’est très peu. Cela peut aider à formuler une phrase complexe sans faute de grammaire mais c’est à peu près tout, ne vous attendez pas à comprendre un film de Philippe Garrel grâce à cela. » À titre de comparaison, se gratter la tête avec l’index ou se cogner la tête avec le poing augmente l’activité neuronale de 23% et 30%, un impact infiniment supérieur à celui de la lecture et de l’apprentissage scolaire, jugé négligeable par le rapport.");
        $item4->setDate(new \DateTime("2018-01-01 00:00:00"));
        $item4->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item4);

        $item5 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost5', $item5);
        $item5->setTitle("Éducation nationale : faute de moyens, les élèves devront s’auto-disséquer en cours de SVT");
        $item5->setContent("« C’est regrettable, mais il faut faire avec, car les dissections restent au programme », s’alarme Marine Heurtault, professeur de SVT au collège, désolée de contraindre ses élèves à un exercice des plus difficiles : s’auto-disséquer. « Ça fait déjà 4 ans que, par manque d’argent, on dissèque avec des couteaux de cantine et du fil dentaire… là c’est la goutte d’eau qui fait déborder le vase ».

Un directeur d’école, M. Lifar, se veut moins pessimiste : « Certes, le budget est réduit pour les matières scientifiques. En revanche, le ministère offre une rallonge pour les réfectoires. Ce qui permettra par exemple à notre cantine d’enfin servir du cordon bleu contenant de la vraie viande, et non pas des résidus de cartilage animal comme c’est le cas depuis des années ».

Le ministre de l’Education, Jean-Michel Blanquer, préfère mettre en avant les avantages de ce changement de fonctionnement : « Ça permettra aux élèves de se dépasser ! Cette semaine, le meilleur élève d’une classe dans laquelle nous avons testé ce processus s’est lui-même retiré l’appendice ! C’est formidable ».");
        $item5->setDate(new \DateTime("2017-12-31 00:00:00"));
        $item5->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item5);

        $item6 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost6', $item6);
        $item6->setTitle("Plusieurs scientifiques affirment que Denver ne serait pas vraiment le dernier dinosaure");
        $item6->setContent("Avec sa bonhomie naturelle et son sourire ravageur, Denver n’aurait il pas blousé tout le monde en se faisant passer pour le dernier dinosaure ? C’est en tout cas ce que semble croire une équipe de chercheurs américains. Au début de cette aventure, ces fameuses paroles qui hantent Steve et son équipe de chercheurs à l’université de Syracuse à New-York : Denver, le dernier dinosaure, c’est mon ami mais bien plus encore. « Pendant 30 ans les paléontologues s’étaient accordés sur ses paroles. Mais pour moi, quelque chose clochait dans cette histoire. »

Steve commence alors sa croisade mais rapidement il réalise que ses questions dérangent. « Les tortues sont également des dinosaures, plus vieilles que Denver en soi. Mais personne ne veut attaquer Denver car tout le monde aime Denver. Il met dans votre vie un peu plus de bonheur avec son grand sourire mielleux et ses lunettes de soleil posées nonchalamment sur ses sourcils. Personne ne peut attaquer un dinosaure aussi cool qui fait du skate et de la guitare électrique » Il est vrai que l’idole des années 90 bénéficiait jusqu’alors d’une aura le rendant quasi intouchable. En 1998, Michel Bournier, un paléontologue Français, avait également émis des doutes sur son titre de « Dernier Dinosaure » ; il mourait noyé dans un lac dans des conditions plus qu’étranges deux semaines plus tard.

Mais Steve, loin d’être intimidé, continue son enquête et grâce à l’appui de journalistes scientifiques, il réussit à faire paraître un article dans le très sérieux « Journal of Vertebrate Pelontholgy ». qui a un retentissement immédiat.

C’est un nouveau coup porté à la réputation du célèbre Dinosaure alors que les 4 adolescents californiens – Wally, Jeremy, Charlie et Mario – qui jouaient avec lui dans la série, avaient déjà défrayé la chronique en témoignant sur la face caché du géant vert au mois de mars dernier. Ils avaient notamment dénoncé son comportement odieux dans les loges, son addiction au crack, ses coups de colère sur les plateaux de tournages mais surtout son penchant pour les assistants mineurs. Une fois de plus, un portrait bien loin du plus gentil des animaux venu de la torride et ancienne jungle.");
        $item6->setDate(new \DateTime("2017-12-30 00:00:00"));
        $item6->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item6);

        $item7 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost7', $item7);
        $item7->setTitle("La Terre : « Tuez-moi une bonne fois pour toutes, qu’on en finisse »");
        $item7->setContent("« Je suis juste blasée », soupire notre planète pendant qu’on extrait du pétrole de ses entrailles. « On peut pas juste me faire exploser comme dans Star Wars ? », suggère Mère Nature. « Comme ça, c’est fini et on n’en parle plus. »

La boule de roche et d’eau vieille de 4.5 milliards d’années a en effet mentionné son souhait de mettre fin à ses jours malgré sa chance énorme d’être située dans la zone habitable de son étoile. « Tuez-moi une bonne fois pour toutes, qu’on en finisse », a en effet déclaré la planète Boucles d’or depuis son domicile situé à 149,6 millions de kilomètres du Soleil.

« J’ai déjà vécu l’éon Hadéen, la création de la Lune, et l’astéroïde qui a tué les dinosaures », explique la fameuse troisième planète du Système solaire. « On pourrait croire que je suis habituée, mais j’en ai juste marre », poursuit-elle sans reconnaître la chance qu’elle a d’abriter la vie. « Vous pensez que le fait d’être l’hôte de millions d’espèces allait me rendre heureuse, mais je vous rappelle qu’il y a des pluies de diamants sur Neptune et Uranus pendant que moi j’ai un énorme trou dans ma couche d’ozone », précise la Terre pendant qu’un idiot lance une boîte de Nesquik dans l’océan depuis un paquebot carburant au pétrole brut.

La pollution n’est cependant pas la première chose à avoir fatigué la Terre : « De toute façon, je vous avoue que je commençais déjà à en avoir un peu marre depuis l’ère du Jurassique. »");
        $item7->setDate(new \DateTime("2017-12-29 00:00:00"));
        $item7->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item7);

        $item17 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost17', $item17);
        $item17->setTitle("[Stage SPIE ICS] Conclusion");
        $item17->setContent("Je vais dans cette article faire le bilan de ces 3 mois de stage passés chez SPIE ICS, tant au niveau humain, professionnel, etc…

Cette expérience est mon tout premier stage et j’ai beaucoup appris, tant au niveau du développement, qu’au niveau compréhension du fonctionnement d’une entreprise. Le bureau est un open-space avec des postes de travail relativement découpé en fonction du rôle des personnes y travaillant. Il y a des petites salles isolés dans lesquelles les employés peuvent y faire de petite réunion ainsi que des appels téléphoniques au calme.

Chaque employé réalise la tâche qui lui est confié et sollicite souvent l’aide de quelqu’un d’autre pour avoir un éclaircissement sur une compétence qu’ils n’ont pas. Certains sont souvent en déplacement, comme par exemple pour les commerciaux qui allaient rencontrer un client, ou encore les experts en réseau qui se déplaçaient sur les sites pour y installer et configurer du matériel. Tout le monde fait son chemin et sait ce qu’il a à faire. L’ambiance y est également très bonne et tout le monde s’entend bien.

Au niveau du développement cela a été un peu difficile mais enrichissant pour plusieurs raisons. Le manque de cahier des charges était assez problématique mais il nous a obligé à communiquer avec les employés autour de nous pour nous expliquer le fonctionnement du système et nous donner leurs point de vue sur comment ils verraient les choses. Comme la société n’est pas du tout orienté développement, nous n’avions personne pour nous guider et nous aider sur des questions techniques. Nous avons du nous débrouiller avec les ressources en ligne, ce qui est important pour notre autonomie mais c’est quand même un peu dommage de ne pas avoir eu de référent pour un premier stage, étant donné qu’on n’a jamais rencontré notre maître de stage, qu’il n’est pas du tout développeur, et que nous ne sommes qu’en première année.

Malgré cela, cette expérience a tout de même été très enrichissante et je ne regrette pas d’avoir accepter la proposition d’Hugo.

 

En conclusion, ce projet et ce stage en entreprise ont été très concluant et très intéressant. Je remercie toutes les personnes au sein de SPIE avec qui nous avons travaillé pour leur bienveillance et le temps qu’ils ont passé avec nous. J’ai appris beaucoup de choses sur les relations en entreprise et sur le développement web, ce qui ne peut que me mettre dans de bonnes conditions pour aborder ma 2ème année à Ingésup Bordeaux.

Merci pour votre lecture.

Guillaume HANOTEL");
        $item17->setDate(new \DateTime("2017-09-21 00:00:00"));
        $item17->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item17);

        $item16 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost16', $item16);
        $item16->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 12 & 13");
        $item16->setContent("Semaine 12
Avant dernière semaine, il est temps de finir les dernières fonctionnalités et de tout uniformiser/corriger. Lors de cette semaine, je me suis occupé du fait que lorsqu’une fois que le devis Excel avait été généré, qu’il puisse être converti en PDF.

Pour cela j’ai utilisé la librairie Unoconv permettant de convertir des fichiers dans un autre format, ici dans notre cas : de .xlsx vers .pdf. J’ai eu du mal a faire fonctionner cette librairie sur linux pour une raison que j’ignore encore, mais j’ai tout de même trouvé une solution sur internet. Jusqu’à présent j’utilisais une fonction PHP pour exécuter la librairie comme si on tapait la ligne de commande, mais ça ne fonctionnait pas. La solution trouvée était de créer un script qui réalisait cette ligne de commande, puis en PHP d’exécuter ce script, ce qui cette fois fonctionnait.

Un autre point à régler était l’envoi de mail une fois qu’un bon de commande avait été mis en ligne ou traité. Pour cela, nous avons utilisé une librairie PHP, PHPMailer, qui permettait de réaliser cette action assez simplement.

A coté de cela, nous continuons de tester le site sur le serveur linux pour s’assurer que tout était fonctionnel, et de corriger les derniers détails par-ci par-là.

 

Semaine 13
Dernière semaine, il est temps de documenter et de finaliser le projet.

Je repasse sur tout le code pour finir de documenter chaque fonction et chaque action pour que si quelqu’un d’autre vient lire le code plus tard, il ait des explications et indications sur ce qui est fait, ainsi qu’enlever les petites choses inutiles.

Précisément, les rendus que nous devions préparer était :

1 Site de démo pré-configuré,
1 Package d’installation,
1 procédure d’installation,
1 documentation d’utilisation (Process, MAJ catalogue, administration)
1 Le code source documenté,
Nous avons donc rédigé une documentation technique pour expliquer comment l’application fonctionnait et comment elle était structurée. Une documentation sur le fonctionnement général de l’application, et un powerpoint, plutôt destiné aux clients, expliquant l’utilisation de la plateforme.

Nous avons eu les dernières réunions avec notre maître de stage et la personne au dessus de lui pour leur présenter l’application finale.

Nos interlocuteurs ont été satisfait du travail réalisé et sont plutôt enclin à retravailler avec nous dans le futur, pour une 2ème version ou pour de tout nouveau projet de développement.

L’application sera d’abord testée avec quelques clients pour voir les retours qui y seront faits et quelles évolutions futures pourront être apportées à la plateforme.

Ainsi se conclut sur une note positive cette dernière semaine de stage.");
        $item16->setDate(new \DateTime("2017-09-20 00:00:00"));
        $item16->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item16);

        $item15 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost15', $item15);
        $item15->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 10 & 11");
        $item15->setContent("Semaine 10
Pour cette semaine, nous nous sommes essentiellement concentré sur l’ajout / la correction de petits détails d’interface, de code, etc…

Je me suis également mis une des dernières grosses fonctionnalités importantes qu’il nous restait : la génération du devis en PDF. En effet une fois que le client a finalisé sa commande, le résultat espéré est la création d’un devis sous forme de PDF avec tous les produits de son panier.

Pour celà, j’ai du réutiliser la librairie PHPExcel, précédemment utilisé pour récupérer les informations du catalogue. Cependant cette fois c’était pour remplir un devis Excel vierge. Pour cela, il fallait remplir plusieurs champs comme : les informations du contact de l’employé SPIE, les informations du client, les informations de l’adresse de l’entreprise qui va payer, et enfin optionnellement les informations de l’adresse du site de l’entreprise où sera installé le matériel. Sans oublier le corps du devis, la liste des produits avec son intitulé, son prix unitaire et sa quantité.

Pour récupérer toutes ses informations, il suffisait simplement de l’id du client qui a commandé et avec le système de Classe et de méthodes, récupérer tout ce dont on avait besoin avec les bonnes méthodes crées pour l’occasion.

La librairie PHPExcel permet simplement de sélectionner la cellule souhaitée et d’y mettre la valeur qu’on lui indiquait.

 

Semaine 11
Une autre fonctionnalité a rajouter est le fait qu’au sein d’un catalogue, généré par un import par exemple, on puisse y ajouter un produit déjà existant, créer un produit qui sera ajouté à ce catalogue, modifier le prix d’un produit dans ce catalogue, ou encore retirer un produit à ce catalogue. Je me suis donc occupé de cette partie présente dans la page détails Catalogue, qui est affiché lorsqu’on clique un catalogue dans la liste des catalogues.

Nous nous sommes aussi vu rajouter une fonctionnalité que nous n’avions pas prévu au départ qui nous a un peu embêter, c’est le fait qu’un employé puisse générer un devis.

J’ai du modifier pas mal de code et la base de données pour permettre ce changement. J’ai donc intégré cette fonctionnalité toujours dans le détail Catalogue, là ou sont affichés tous les produits du catalogue, en rajoutant un bouton pour créer une commande en choisissant le client concerné. Puis, à l’aide d’un petit bouton présent sur chaque produit, de pouvoir l’ajouter au panier du client choisi, mais du côté administration.");
        $item15->setDate(new \DateTime("2017-09-04 00:00:00"));
        $item15->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item15);

        $item14 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost14', $item14);
        $item14->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 8 & 9");
        $item14->setContent("Semaine 8 :
Pour cette 8ème semaine, j’ai créé une interface qui apparaît après l’import du catalogue. Elle permet d’associer les plateformes des produits que le script a reconnu dans le excel aux grandes catégories que l’on a définit comme menu principal pour le client. En effet, dans le excel, rien n’indique à quelle grande catégorie est associé les produits et plateformes rencontrés. Il fallait donc créer une page qui permettait de réaliser cette action.

Il fallait aussi faire une gestion des catalogues, c’est à dire pouvoir en créer un sans forcément importer un excel, le modifier et le supprimer.

Hugo s’est lui occupé d’utiliser une librairie permettant de vérifier que les formulaires étaient correctement remplis avant validation.

Il a fallu aussi mettre en place des conditions pour éviter certaines erreurs. Par exemple avant de supprimer une entreprise, il faut qu’il n’y est plus d’employés dans cette entreprise, etc…

Nous nous sommes également occupés d’améliorer l’interface, de corriger des erreurs et autres bugs.

 

Semaine 9 :
Durant cette semaine, nous avons enfin eu accès à un serveur en ligne grâce au père d’Hugo qui a pris un abonnement Azure, permettant de créer un serveur accessible sur internet à l’aide d’une adresse IP, et accessible pour nous pour mettre notre site web et le tester sur un serveur linux.

Une fois les pages détails Client et détail Employé développé (pages où l’on peut voir toutes les infos d’un employé ou d’un client en particulier), il fallait créer sur ces pages la fonctionnalité d’associer un client à un employé. En effet, lorsqu’un client réalise une certaine action sur le site, comme l’upload d’un bon de commande, ou la génération d’un devis, il faut que ce client ait des employés associés à qui envoyer des mails ou utiliser les informations pour remplir le devis. Pour cela, il y a par exemple sur la page détail client, la liste des employés associés à ce client, ainsi qu’une fonctionnalité permettant d’ajouter un employé parmi ceux disponibles. Il également possible de supprimer une liaison entre le client et l’employé. La même fonctionnalité est présente sur la page détail employé.

Hugo s’est notamment occupé de faire l’interface permettant d’afficher les bons de commande mis en ligne.");
        $item14->setDate(new \DateTime("2017-08-23 00:00:00"));
        $item14->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item14);

        $item13 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost13', $item13);
        $item13->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 6 & 7");
        $item13->setContent("Semaine 6
Pour la semaine 6, nous avons continué le travail en cours, notamment créer les classes qui permettent de faire les liens entre les entités : ProduitCategorie, ClientEmploye pour lier les produits aux catégories, ainsi que les clients aux employés.

J’ai du modifier quelques entités et revoir les classes et notamment en créer une pour correctement lier mes entités de Produit, de Catalogue, et de Prix.

Maintenant que nous avions une base de données de produit assez conséquente grâce à l’import de catalogue, nous avons aussi pu commencer à afficher les produits sur la partie client. Comme un catalogue est lié à une entreprise, seules les clients de cette entreprise peuvent voir les produits du catalogue de leur entreprise.

Il en va de même pour les prix des produits qui sont aussi liés au catalogue. Ainsi, même si deux clients d’une entreprise différentes peuvent voir le même produit, il n’aura sûrement pas le même prix.

Une des problématiques que l’on a aussi eu est comment allait-on organiser la navigation de la partie client. Nous nous sommes mis d’accord avec l’aide de certains collègues autour de nous que nous allions opter pour la navigation suivante : Sur la barre de menu accessible en dessous du haut de page, nous avons choisi arbitrairement des grandes catégories dans lesquelles on pouvait ranger tous les types de produits disponibles. Une fois cliqué, on est redirigé vers cette fois la liste des constructeurs associés aux produits accessibles. L’utilisateur choisit le constructeur qu’il souhaite, puis il arrive sur la liste des plateformes du constructeur. Ces plateformes sont les intitulés des produits dans le excel. L’utilisateur choisit la plateforme, puis il arrive cette fois sur la liste des produits. On avons réalisé 2 affichages pour ces produits, une sous forme de carré avec une image, car notre maître de stage voulait qu’un produit puisse avoir une image, et un affichage sous forme de liste, qui prend moins de place.

Pour s’y retrouver dans la navigation, nous avons placé un fil d’ariane permettant de voir à quelle étape on se situe, et éventuellement de revenir en arrière si besoin.

Semaine 7
Pour cette 7ème semaine, nous avons réalisé la page panier, ainsi que l’action d’ajouter un produit au panier.

Le cheminement général de cette action est la suivante :

Premièrement, on vérifie si le client a déjà une commande commencé ou non, si c’est le cas, on regarde si le produit qu’il ajoute a déjà été ajouté dans son panier, si c’est le cas, on met juste à jour la quantité de ce produit, sinon on ajoute ce produit à la commande. Pour le cas où il n’a pas encore mis de produit à son panier, une nouvelle commande est créé avec le produit qu’il vient d’ajouter.

Une autre fonctionnalité essentielle a ajouté pour un panier que j’ai développé durant cette semaine, est le fait qu’on puisse changer la quantité d’un produit, et supprimer un produit du panier. Pour ce cas, j’ai notamment utilisé la technologie AJAX pour recharger le nombre de produit et le total du panier sur la page sans rechargement lorsqu’on change la quantité d’un produit.

Pendant ce temps là, Hugo continuait les gestion des entités avec les constructeurs et la taxe. Une fois fini, il fallait également faire les pages qui allaient s’afficher lorsqu’on cliquait sur une entité en particulier. Par exemple, lorsqu’on clique sur le client A, on est redirigé sur la page de détail de ce client A, avec toutes ses informations.

Nous avons également modifié l’import du catalogue pour avoir une meilleure interface lors de l’opération. Comme un import durait 5min pour environ 10 000 produits, j’ai modifié le code pour que l’opération s’éxecute en AJAX, avec une icone de chargement pendant que le fichier était parcouru.");
        $item13->setDate(new \DateTime("2017-07-31 00:00:00"));
        $item13->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item13);

        $item12 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost12', $item12);
        $item12->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 4 & 5");
        $item12->setContent("Semaine 4
Lors de la 4ème semaine, nous nous sommes enfin attelé à notamment créer des pages fonctionnelles. Pour le style des pages, nous avons utilisé le framework CSS Materialize. Il nous permet d’avoir un joli style par défaut pour nos éléments HTML. Il offre également une manière simple de structurer nos éléments et permet d’utiliser des icônes et des éléments graphiques déjà prêts.

Il a donc fallu créer les menus de base et ce qu’ils allaient contenir, d’un côté pour la partie client, de l’autre pour la partie admin. Pour la partie client, la volonté était de vraiment personnaliser le menu selon le client.

Le menu du client est donc composé :

du logo SPIE,
d’une barre de recherche,
d’un message d’accueil au nom du client (Bonjour Mr X),
d’un bouton menant à son panier,
de liens vers :
ses informations,
ses devis,
la page d’envoi d’un bon de commande,
de l’image de son entreprise si elle a été fournie
du bouton de déconnexion
Quant au menu de l’employé, il est composé du même menu client mais seulement avec le logo SPIE, la barre de recherche, le message d’accueil et le bouton de déconnexion. Mais l’intérêt de la partie Administration est de pouvoir gérer toutes les entités de la plateforme, ce qui implique un autre menu avec les liens vers chaque page de gestion de chaque entité. Pour cela, je me suis inspiré de Prestashop qui propose un menu vertical sur la gauche. J’ai un peu copié le style que proposait Prestashop pour être sûr d’avoir un résultat propre et esthétique.

Une fois ce cadre posé, nous pouvions commencé à créer les pages de gestion de chaque entité et coder toutes les actions qui pouvaient s’y trouver, ce qui est la plus grosse partie du travail de ce projet. Fondamentalement, chaque page de gestion était ce qu’on appelle un CRUD (Create/Read/Update/Delete), c’est à dire que sur la page Utilisateurs par exemple, on pouvait voir la liste des utilisateurs (Read), on disposait d’un formulaire de création d’un nouvel utilisateur (Create), on pouvait modifier les informations d’un utilisateur (Update), et enfin supprimer un utilisateur (Delete).

Donc pendant qu’Hugo commençait à créer ces pages, notamment celle des utilisateurs en premier, je m’attelais à une partie assez conséquente de la partie administration qu’était l’import d’un catalogue de produit.

 

Semaine 5
Pour la 5ème semaine donc, Hugo continua a créer les pages de gestion des entités, comme Entreprise, Produit, Catégorie ou encore Client.

De mon côté, je continuais à faire l’import du catalogue, la première étape était donc de faire le formulaire qui permet d’une part de rentrer les quelques caractéristiques du catalogue, c’est à dire :

A quelle entreprise est lié ce catalogue ?
A quelle constructeur sont liés les produits de ce catalogue ?
La date du début
La date de fin
Et d’uploader le fichier excel contenant le catalogue.

La seconde étape après avoir récupéré les infos du catalogue et son fichier associé, était de parcourir ce excel pour en extraire les informations et les enregistrer en base de données. Pour cela, j’ai utilisé la librairie Excel PHPExcel, qui permet de lire un fichier Excel, pour en récupérer les données, ou en écrire. La condition pour que le script fonctionne est le fait que le fichier devait respecter un format spécifique. Le modèle sur lequel je me suis basé pour récupérer les données est normalement généré automatiquement par le système de SPIE.

Le script en PHP va donc grossièrement faire une boucle sur l’ensemble les lignes du excel, et créer un nouveau produit lorsqu’il trouve un produit, avec comme catégorie l’intitulé qui se trouve plus haut.");
        $item12->setDate(new \DateTime("2017-07-22 00:00:00"));
        $item12->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item12);

        $item11 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost11', $item11);
        $item11->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 2 & 3");
        $item11->setContent("Semaine 2 :
Pour cette 2ème semaine, nous nous sommes répartis les tâches : Pendant qu’Hugo faisait les Mock-ups (les maquettes sur logiciels), je m’attelais à avancer le code qui fera la base du projet. Nous avons choisi de bien divisé le code en suivant le pattern MVC : Modèle – Vue – Contrôleur, qui consiste à séparer le code avec :

Le modèle : qui interagit avec la base de données et qui contient les fonctions et méthodes toutes prêtes.
La Vue : Le code contenant seulement l’affichage
Le Contrôleur, celui qui fait le lien entre les deux, c’est à dire appelé les fonctions du modèle et envoyer les résultats à afficher à la vue.
Nous n’avions que partiellement vu en cours ce pattern, puisque le modèle et le contrôleur était mélangé.

J’ai donc décidé d’innover pour le bien du projet et d’utiliser la Programmation Orienté Objet en PHP (chose que je n’avais jamais encore faite), pour que le projet soit plus évolutif, propre et maintenable.

Dans ce cas, le modèle est composé notamment de classes qui serviront à instancier des objets qui auront les mêmes attributs que leurs équivalents sous forme de tables en base de données. Ces classes possèdent des méthodes qui permettent d’aller chercher les données de la base de données. Ces méthodes seront utilisés dans les contrôleurs pour les envoyer dans la vue. Exemple : la méthode « getClientsFromProduitId » renverra tous les clients de l’entreprise dont l’ID est passé en paramètre.

J’ai donc développé durant cette semaine la plupart des classes des entités que la plateforme possédait comme par exemple Pays, Ville, Adresse, Utilisateur, Entreprise, Produit, etc…

Nous avons appris jeudi que lors du point en visioconférence prévu pour vendredi le lendemain, le directeur des activités participerait à la réunion pour être au fait de ce qui est en train de se mettre en place. Nous avons donc réalisé un nouveau PowerPoint pour montrer notre avancement et notre capacité à bien réaliser le projet.

Une fois la réunion faite qui s’est bien passée, nous avions comme mission de faire un planning de développement pour le vendredi prochain.

Ainsi s’est terminé notre 2ème semaine de stage.

 

Semaine 3 :
La 3ème semaine de stage commence, et le père d’Hugo est de retour à l’agence. Il a été notre contact privilégié pour nous épauler sur certaines questions liées au fonctionnement de l’entreprise. En effet pour ce projet nous avions besoin de construire son architecture, sa base de données, en lien avec les différentes entités qui interviennent dans le processus du commerce. Nous lui avons montré nos schémas de base de données pour qu’il comprenne ce que nous commencions à mettre en place, et nous donner son avis et ses conseils sur comment fonctionnent les différentes entités du système qu’il connait mieux que nous.

C’est là qu’il nous a expliqué le concept de catalogue, que nous n’avions pas pris en compte car jamais expliqué, qui pourtant est essentiel dans le processus. Un catalogue est grossièrement une liste de produits qui appartiennent à un ou plusieurs constructeurs, et ces produits sont organisés en catégories. Lors des discussions, le client et SPIE vont négocier la remise que va faire SPIE quand le client va acheter ces produits. Chaque client dispose donc d’un catalogue de produits dont les prix sont spécifiques à ce client.

Une fois ces nouvelles informations comprises, nous les avons prises en compte pour modifier notre schéma de la base de données, et établir un planning des fonctionnalités à faire.

Le travail de la semaine a été donc de continuer de créer les classes PHP correspondant aux entités de la base de données, et résoudre des questions techniques sur comment catégoriser les produits que l’on allait importer depuis le Excel représentant le catalogue de produit.

Une autre des problématiques à laquelle j’ai été confronté était de gérer l’héritage de l’entité Client et Employe. J’ai pris la décision qu’il y aurait une table Utilisateur dans laquelle se trouverait les informations communes à n’importe quel utilisateur de la plateforme (mail, mot de passe, nom, etc…), et que je séparerai les clients et les employés dans 2 tables différentes qui découlent toutes deux d’Utilisateur. Ainsi, le fait qu’un utilisateur accède à l’interface Administration ou l’interface boutique, dépend de si il est présent dans la table client ou employé.");
        $item11->setDate(new \DateTime("2017-07-02 00:00:00"));
        $item11->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item11);

        $item10 = new Post();
        $this->addReference('_reference_BlogBundleEntityPost10', $item10);
        $item10->setTitle("[Stage SPIE ICS] Compte-Rendu Semaine 1");
        $item10->setContent("Introduction
Avant d’entrer dans le vif du sujet, rappel du contexte :

Fin de ma première année au sein de l’école Ingésup Bachelor 1, un camarade de classe, Hugo MONFOUGA, a trouvé une opportunité de réaliser un stage pour l’été 2017. Un responsable de son père, Mr G., travaillant chez SPIE ICS à Toulouse, a pour projet de réaliser une plateforme web qui permettrait à leurs clients de réaliser des commandes de produits, et de pouvoir automatiser certaines tâches, qui jusqu’à lors, étaient fastidieuses à faire.

Un premier rendez-vous a lieu entre Hugo et Mr G. a lieu pour définir les attentes du projet et demander à Hugo si il était possible de réaliser ce qu’il demandait, en partant du CMS d’e-commerce Prestashop. Mr G. voulait notamment savoir si il était possible :

d’enlever les modules de paiement et de livraisons
d’ajouter une fonctionnalité de génération de devis en fin de commande,
de pouvoir avoir plusieurs prix sur le même produit en fonction du client
de pouvoir mettre à jour la base de données des produits à partir de leurs données Excel
Comme le projet s’avère d’envergure, il est question de trouver une deuxième personne pour mener à bien ce projet. C’est alors que Mr G. laissa quelques jours à Hugo pour voir si il était possible de réaliser cela avec Prestashop, et c’est aussi là qu’il me propose de rejoindre le projet, ce que j’accepte.

Hugo confirma qu’il était possible de réaliser ça sur Prestashop et est donc convenu que notre stage commencerait le 19 juin 2017.

 

Commencement
Jour J : Arrivé dans les locaux assez calme, beaucoup de personnels étaient en déplacement, et la seule personne présente pour nous accueillir n’était pas au courant de notre arrivée. Notre tuteur ne travaillant pas à Mérignac et étant toujours très occupé, nous avons eu des difficultés pour le joindre et savoir par quoi commencer.

Nous avons finalement réussi à le contacter en milieu de journée, nous avons pu réexpliquer les besoins qu’il attendait pour le projet,  avec pour consigne d’établir un planning des tâches à faire pour la fin de la semaine, afin de pouvoir commencer le développement dès la semaine suivante.

 

Changement de plan
Nous avons donc commencé à réfléchir à la solution et aux fonctionnalités à faire sur Prestashop. Nous nous sommes rapidement rendu compte qu’il était préférable de repartir de 0 pour plusieurs raisons :

Prestashop couvre certes un grand nombre de cas de figures pour une boutique en ligne classique, mais pour des fonctionnalités très spécifiques, comme on nous le demandait, Prestashop n’est pas très flexible ; On devait notamment supprimer les modules de paiement et de livraison qui étaient inutiles ; ça aurait impliquer de supprimer physiquement du code dans un système de 15 000 fichiers et 250 tables en base de données qui nous est totalement étranger. Faire une telle chose aurait engendrer des répercussions importantes dans le code que nous n’aurions pas pu identifier, ni corriger efficacement.

Repartir de 0 nous permet d’avoir un système beaucoup plus simple que Prestashop, donc plus maintenable et compréhensible, d’avoir une parfaite maîtrise sur le système, et pouvoir y implémenter les fonctionnalités demandées sans être perdu dans un vaste système écrit avec le Framework PHP Symphony, que nous ne maîtrisons pas, et qui fonctionne par un système de module payant que nous ne pouvions pas utiliser.

Nous avons tout de même recherché s’il existait d’autres solutions que Prestashop pour le projet. Nous avons regardé Magento, WooCommerce, et d’autres, mais la majorité était payant et présentait les mêmes contraintes que Prestashop.

Le lendemain nous présentions notre point de vue sur le projet à Mr G., qui était sceptique de peur que nous n’ayons pas assez de temps et que la solution finale ne soit pas utilisable. Nous avons alors décider de lui présenter une petite démo de site boutique pour le vendredi prochain pour le rassurer quant à nos capacités.

 

Le Rush
A partir de là, nous avions environ 2 jours et demi pour développer un site un minimum fonctionnel. La première étape a bien entendu été de créer la base de données et surtout de bien la réfléchir. Et c’est là que se pose la première grosse difficulté du projet qui nous suivra du début à la fin : Nous n’avons pas de cahier des charges. Mr G. nous a seulement expliqué la logique qu’il souhaitait pour le site, mais aucune information sur les clients, aucune informations sur les produits, aucune informations sur quoi que ce soit. Informations pourtant vitales dont on a besoin pour bien démarrer le projet et créer la base de données.

Nous avons du faire sans et nous débrouiller avec les informations dont on se doutait, celles données par le père d’Hugo au téléphone qui était en déplacement, et aux éléments dont on s’inspirait sur internet et sur la base de données de Prestashop.

Mais nous se sommes pas partis de totalement rien puisque nous avons repris la base de site web que nous avions développé au cours de l’année pour le projet OLibrary, une plateforme de gestion de bibliothèque en ligne, avec une gestion de notices, d’exemplaires, d’utilisateurs, de prêts, etc… Nous avons seulement garder les fichiers essentielles à l’application, ainsi que le système de connexion/déconnexion.

Nous avons donc rapidement développé un petit squelette de site web et essayant de nous concentrer sur les fonctionnalités qu’il souhaitait. Nous avons donc réfléchi à comment un produit pouvait avoir plusieurs prix, ce que nous avons réussi sans difficulté. Mais surtout un point très important auquel nous devions trouver une solution : La génération de PDF.

Nous n’avons seulement pu que chercher et tester la première solution que nous avions trouvé pour générer un PDF à partir de PHP à l’aide d’une librairie nommé FPDF, qui permet de placer du texte à une certaine position définie en pixel.

\$pdf = new FPDF(); 
\$pdf->AddPage(); 
\$pdf->SetFont('Arial','B',16); 
\$pdf->Cell(40,10,'Hello World !'); 
\$pdf->Output();
Ce n’est pas vraiment la solution souhaitée, car l’idée est plus de remplir un Excel existant sur le modèle d’un devis, puis de l’exporter en PDF, ce à quoi nous n’avions pas encore la solution.

La Présentation
Vendredi est là et nous devons présenter notre petite démo à Monsieur G. par visioconférence. Nous avions préparé une présentation PowerPoint dans laquelle nous avions remis tous les éléments que nous avions notés pour être sûr que nous les avions bien compris et qu’ils correspondaient aux attentes du projet. Nous avons démontré qu’une solution à partir de rien était plus adaptée au projet et que nous étions capable de développer les fonctionnalités attendues. Toutefois Monsieur G. n’a pas fait trop de retour concernant ses inquiétudes vis à vis de partir sur autre chose que Prestashop. Nous avons fini par discuter des choses à rajouter à notre « cahier des charges » que l’on construisait nous-mêmes petit à petit, et avons défini une prochaine visioconférence à vendredi prochain, où nous devions préparer des maquettes de style de page web à lui proposer. Ceci conclut donc la fin de cette première semaine de stage.");
        $item10->setDate(new \DateTime("2017-06-30 00:00:00"));
        $item10->setUser($this->getReference('_reference_BlogBundleEntityUser1'));

        $manager->persist($item10);

    
        $manager->flush();
    }

}
